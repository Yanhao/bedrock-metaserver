version: '3.8'

services:
  # MetaServer cluster with embedded etcd
  metaserver-1:
    build: .
    container_name: metaserver-1
    ports:
      - "1080:1080"
      - "6063:6063"
      - "2379:2379"  # Expose embedded etcd client port
      - "2380:2380"  # Expose embedded etcd peer port
    volumes:
      - ./config.toml:/opt/bedrock/metaserver/config.toml:ro
      - metaserver1-data:/app/data/etcd
    environment:
      - METASERVER_NAME=metaserver-1
    networks:
      - bedrock-network
    # Use the entrypoint defined in Dockerfile

  metaserver-2:
    build: .
    container_name: metaserver-2
    depends_on:
      - metaserver-1
    ports:
      - "1081:1080"
      - "6064:6063"
      - "2479:2379"  # Expose embedded etcd client port
      - "2480:2380"  # Expose embedded etcd peer port
    volumes:
      - ./config.toml:/opt/bedrock/metaserver/config.toml:ro
      - metaserver2-data:/app/data/etcd
    environment:
      - METASERVER_NAME=metaserver-2
    networks:
      - bedrock-network
    # Use the entrypoint defined in Dockerfile

  metaserver-3:
    build: .
    container_name: metaserver-3
    depends_on:
      - metaserver-2
    ports:
      - "1082:1080"
      - "6065:6063"
      - "2579:2379"  # Expose embedded etcd client port
      - "2580:2380"  # Expose embedded etcd peer port
    volumes:
      - ./config.toml:/opt/bedrock/metaserver/config.toml:ro
      - metaserver3-data:/app/data/etcd
    environment:
      - METASERVER_NAME=metaserver-3
    networks:
      - bedrock-network
    # Use the entrypoint defined in Dockerfile

  etcd-workbench:
    image: tzfun/etcd-workbench
    container_name: etcd-workbench
    depends_on:
      - metaserver-1
    ports:
      - "8002:8002"
    networks:
      - bedrock-network

  # Prometheus for monitoring etcd and metaserver
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    depends_on:
      - metaserver-1
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - bedrock-network
    command: ["--config.file=/etc/prometheus/prometheus.yml", "--storage.tsdb.path=/prometheus", "--web.console.libraries=/usr/share/prometheus/console_libraries", "--web.console.templates=/usr/share/prometheus/consoles"]

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana-provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana-provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./etcd-grafana-dashboard.json:/etc/grafana/provisioning/dashboards/etcd-grafana-dashboard.json
    networks:
      - bedrock-network
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false

volumes:
  metaserver1-data:
  metaserver2-data:
  metaserver3-data:
  prometheus-data:
  grafana-data:

networks:
  bedrock-network:
    driver: bridge
    name: bedrock-network
